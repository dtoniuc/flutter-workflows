name: build_ios

on:
  workflow_call:
    inputs: 
      build_number:
        required: true
        type: string
      artifact_name:
        required: true
        type: string
      artifact_path:
        required: true
        type: string
      artifact_file:
        required: true
        type: string
    secrets:
      firebase_services_passphrase:
        required: true
      appstore_cert_base64:
        required: true
      appstore_cert_passphrase:
        required: true
      ios_mobileprovision_base64:
        required: true
      runner_keychain_password:
        required: true

jobs:
  build_ios:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.appstore_cert_base64 }}
          P12_PASSWORD: ${{ secrets.appstore_cert_passphrase }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.ios_mobileprovision_base64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.runner_keychain_password }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - uses: subosito/flutter-action@v2.3.0
        with:
          flutter-version: '2.10.2'
          channel: 'stable'
          cache: true
          cache-key: flutter 
          cache-path: ${{ runner.tool_cache }}/flutter 

        # Build IPA using the workflow build number as version number
      - name: Building and sign IPA
        run: flutter build ipa --release --build-number ${{ inputs.build_number }} --export-options-plist=ios/Runner/ExportOptions.plist 
                
      - name: Upload artifact to Github
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact_name }}
          path: ${{ inputs.artifact_path }}/${{ inputs.artifact_file }}

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision